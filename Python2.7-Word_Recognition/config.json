{
  "serverless-cloud-function-application": {
    "application":{
      "Chinese":{
        "name": "图片转文字",
        "description": "本示例使用 API 网关触发器和云函数快速构建web后台，实现图片中文字识别的功能，用户通过 API 网关上传图片文件，上传后的文件会保存在COS，并调用AI接口实现文字识别，把结果返回前端",
        "attention": "该云函数使用了API 网关触发器，并使用了集成响应功能，返回值需要构造为Json格式，另外在使用本示例代码时需要在函数里配置环境变量cos bucket及region等信息",
        "readme": {
            "file": "",
            "content": ""
        },
        "license": {
            "file": "",
            "content": "公开"
        },
        "author": {
            "name": "腾讯云无服务器云函数团队"
        }
      },
      "English":{
        "name": "Word_Recognition",
        "description": "This demo uses API GW trigger and SCF to build WEB backend service.It can realize word recognition from picture",
        "attention": "This demo has been used api gw and integrated response function. So the return value should be json format based on the requirement",
        "readme": {
            "file": "",  // readme file
            "content": ""  //content of readme
        },
        "license": {
            "file": "",  // license file
            "content": "Open"  //content of license
        },
        "author": {
            "name": "Tencent Cloud Serverless Team"  // author
        }
      },
      "input_parameters":{
        "event":"",
        "context":""
      },
      "output_parameters":{
        "response":{
          "isBase64Encoded": "False",
          "statusCode": 200,
          "headers": {"Content-Type": "text", "Access-Control-Allow-Origin": "*"},
          "body": "res_text"  //the content of word recognition
        }
      },
      "download_address":"https://github.com/tencentyun/scf-demo-repo/tree/master/Python2.7-Word_Recognition",  //Demo's git download url. demo的git下载链接
      "tags":[
              "apigw", "Python2.7", "Word_Recognition"  
              // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on.
              // 标签统一为英文，可编写多个，建议使用runtime、触发器、场景等关键字，用户可以通过该关键字搜索。前台需要展示，请认真填写，不支持中文
      ],
      "version": "1.4.1"  
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本号，通过版本号标识 demo 升级情况，未修改版本号会导致 demo 不更新至页面
    },
    "functions": {
      "name": "Word_Recognition",  // Function name which only be in English. 函数名称，只支持英文
      "description": "This demo uses API GW trigger and SCF to build WEB backend service.It can realize word recognition from picture. 本示例使用 API 网关触发器和云函数快速构建web后台，实现图片中文字识别的功能，用户通过 API 网关上传图片文件，上传后的文件会保存在COS，并调用AI接口实现文字识别，把结果返回前端",
      "handler":"index.main_handler",
      "memorySize": 128,  // Running memory.  运行配置内存
      "timeout": 10,  // Running timeout. 运行超时时间
      "runtime": "Python2.7", // Runtime which users can search demo by this keyword. 运行环境，用户可以通过该关键字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment":{
      },      // Optional, used to define environment variables. 可选，用于定义环境变量
      "Events":{
        "Type": "TencentCloud::Serverless::Api",
        "Properties":{
          "Path": "/Word_Recognition",
          "StageName": "release",
          "HttpMethod": "ANY",
          "ServiceName":"SCF_API_SERVICE",
          "Auth":"FALSE" //"FALSE" means no authentication and "TRUE" means that key pair is required. "FALSE"表示免鉴权，“TRUE”表示需要秘钥对
        }
      },      // Optional, used define the event source that triggers this function. 可选，用于定义触发此函数的事件源
      "VpcConfig":{
      },      // Optional, used configure cloud function's private network. 可选， 用于配置云函数访问 VPC 私有网络。
      "codeObject": {
          "codeFile": [
              "Word_Recognition.py"
          ],
          "CodeUri":[     // Code download url which should be same as 'download_address'.  代码下载地址，和download_address保持一致
              "https://github.com/tencentyun/scf-demo-repo/tree/master/Python2.7-Word_Recognition"
          ]
      }
    }
  }
}
