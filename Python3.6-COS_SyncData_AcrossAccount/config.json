{
  "serverless-cloud-function-application": {
    "application":{
      "Chinese":{
        "name": "COS跨账号实时增量数据同步",
        "description": "本示例使用 COS 触发器，完成COS跨账号不同bucket的增量数据同步。即当COS上有文件上传时，会自动触发函数完成不同bucket的实时数据同步。",
        "attention": "在使用本示例代码时需要在函数环境变量里配置源地域、目的地域、目的bucket、目标账号的秘钥对信息，另外会使用到源账号的运行角色，需要确保角色有源COS的对象下载和上传接口权限。",
        "readme": {
            "file": "",
            "content": ""
        },
        "license": {
            "file": "",
            "content": "公开"
        },
        "author": {
            "name": "腾讯云无服务器云函数团队"
        }
      },
      "English":{
        "name": "Python3.6-COS_SyncData_AcrossAccount",
        "description": "This example uses COS triggers to complete the incremental data synchronization of COS across different buckets. That is, when there is a file upload on COS, it will automatically trigger the function to complete the real-time data synchronization of different buckets.",
        "attention": "When using this sample code, you need to configure the source region, destination region, and destination bucket information in the function environment variable. In addition, you will use the running role. You need to ensure that the role has COS object download and upload interface permissions.",
        "readme": {
            "file": "",  // readme file
            "content": ""  //content of readme
        },
        "license": {
            "file": "",  // license file
            "content": "Open"  //content of license
        },
        "author": {
            "name": "Tencent Cloud Serverless Team"  // author
        }
      },
      "input_parameters":{
        "event":"",
        "context":""
      },
      "output_parameters":{
      },
      "download_address":"https://github.com/tencentyun/scf-demo-repo/tree/master/Python3.6-COS_SyncData_AcrossAccount",  //Demo's git download url. demo的git下载链接
      "tags":[
              "COS", "Python3.6", "SyncData"
              // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on.
              // 标签统一为英文，可编写多个，建议使用runtime、触发器、场景等关键字，用户可以通过该关键字搜索。前台需要展示，请认真填写，不支持中文
      ],
      "version": "1.0"  
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本号，通过版本号标识 demo 升级情况，未修改版本号会导致 demo 不更新至页面
    },
    "functions": {
      "name": "COS_SyncData_AcrossAccount",  // Function name which only be in English. 函数名称，只支持英文
      "description": "本示例使用 COS 触发器，完成COS跨账号不同bucket的增量数据同步。即当COS上有文件上传时，会自动触发函数完成不同bucket的实时数据同步。注意：在使用本示例代码时需要在函数环境变量里配置源地域、目的地域、目的bucket、目标账号的秘钥对信息，另外会使用到源账号的运行角色，需要确保角色有源COS的对象下载和上传接口权限。",
      "handler":"index.main_handler",
      "memorySize": 128,  // Running memory. 运行配置内存
      "timeout": 100,  // Running timeout. 运行超时时间
      "runtime": "Python3.6", //Runtime which users can search demo by this keyword.  运行环境，用户可以通过该关键字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment":{
        "target_bucket": "function-scf-1256608914",
        "target_region": "ap-shanghai",
        "source_region": "ap-beijing",
        "target_secret_id": "xxxxxxx",
        "target_secret_key": "xxxxxx"
      },      // Optional, used to define environment variables.  可选，用于定义环境变量
      "Events":{
      },      // Optional, used define the event source that triggers this function. 可选，用于定义触发此函数的事件源
      "VpcConfig":{
      },      // Optional, used configure cloud function's private network. 可选， 用于配置云函数访问 VPC 私有网络。
      "codeObject": {
          "codeFile": [
              "index.py"
          ],
          "CodeUri":[     // Code download url which should be same as 'download_address'. 代码下载地址，和download_address保持一致
              "https://github.com/tencentyun/scf-demo-repo/tree/master/Python3.6-COS_SyncData_AcrossAccount"
          ]
      }
    }
  }
}