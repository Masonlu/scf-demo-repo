{
  "serverless-cloud-function-application": {
    "application":{
      "Chinese":{
        "name": "HTTP 自定义邀请函",
        "description": "使用API网关+云函数构建REST API，提供图片上添加文字的功能，并把HTML页面部署至对象存储，提供静态网站服务；当在网页上输入文字时，生成定制化的邀请函",
        "attention": "1. 本示例需要在环境变量配置COS的bucket信息，并设置API网关触发器配合使用；2. 另外在函数配置中会使用运行角色来操作COS资源，需要确保有cos bucket的对象上传权限；3. 源文件所在bucket需要设置为公有读私有写。",
        "readme": {
            "file": "",
            "content": ""
        },
        "license": {
            "file": "",
            "content": "公开"
        },
        "author": {
            "name": "腾讯云无服务器云函数团队"
        }
      },
      "English":{
        "name": "Add_Text_To_Pictures",
        "description": "This example demonstrates from http api post name to cloud function, add name to the invitation letter in cloud function, upload the processed picture to COS, and return the download address to the calling terminal",
        "attention": "1. This example needs to configure the COS bucket information in the environment variables, and set the API gateway trigger to use; 2. In addition, in the function configuration, the operating role will be used to operate the COS resources, and the object upload permission of the cos bucket needs to be ensured; 3 . The bucket where the source file is located needs to be set to public read and private write.",
        "readme": {
            "file": "",  // readme file
            "content": ""  //content of readme
        },
        "license": {
            "file": "",  // license file
            "content": "Open"  //content of license
        },
        "author": {
            "name": "Tencent Cloud Serverless Team"  // author
        }
      },
      "input_parameters":{
        "event":"",
        "context":""
      },
      "output_parameters":{
      },
      "download_address":"https://github.com/tencentyun/scf-demo-repo/tree/master/Python2.7-Add_Text_To_Pictures",  // Demo's git download url. demo的git下载链接
      "tags":[
              "HTTP", "Python2.7", "REST API"
              // The tags only support English and can be multiple, we suggest you to use keywords such as runtime, trigger, environment and so on.
              // 标签统一为英文，可编写多个，建议使用runtime、触发器、场景等关键字，用户可以通过该关键字搜索。前台需要展示，请认真填写，不支持中文
      ],
      "version": "1.4"  
      // Version number, which identifies the demo version status. 
      // Demo will not to update to the page if the version number unmodified.
      //版本号，通过版本号标识 demo 升级情况，未修改版本号会导致 demo 不更新至页面
    },
    "functions": {
      "name": "Add_Text_To_Pictures",  // Function name which only be in English. 函数名称，只支持英文
      "description": "本示例演示从http api post姓名到云函数，在云函数中给邀请函添加姓名，并把处理后的图片上传COS，返回下载地址到调用端。注意：1. 本示例需要在环境变量配置COS的bucket信息，并设置API网关触发器配合使用；2. 另外在函数配置中会使用运行角色来操作COS资源，需要确保有cos bucket的对象上传权限；3. 源文件所在bucket需要设置为公有读私有写。",
      "handler":"index.main_handler",
      "memorySize": 512,  // Running memory. 运行配置内存
      "timeout": 60,  // Running timeout. 运行超时时间
      "runtime": "Python2.7", // Runtime which users can search demo by this keyword. 运行环境，用户可以通过该关键字搜索["Python2.7", "Python3.6", "Nodejs6.10", "Java8", "LuaCDN", "NodejsCDN", "Php5", "Php7", "Nodejs8.9", "Go1"]
      "Environment":{
        "region": "ap-shanghai",
        "target_bucket": "serverless-demo-1256608914",
        "target_path": "/invitation"
      },      // Optional, used to define environment variables.  可选，用于定义环境变量
      "Events":{
      },      // Optional, used define the event source that triggers this function. 可选，用于定义触发此函数的事件源
      "VpcConfig":{
      },      // Optional, used configure cloud function's private network. 可选， 用于配置云函数访问 VPC 私有网络。
      "codeObject": {
          "codeFile": [
              "index.py"
          ],
          "CodeUri":[     // Code download url which should be same as 'download_address'. 代码下载地址，和download_address保持一致
              "https://github.com/tencentyun/scf-demo-repo/tree/master/Python2.7-Add_Text_To_Pictures"
          ]
      }
    }
  }
}
